{
	"info": {
		"_postman_id": "b2cf6f32-92f4-41a5-bff7-ef3e22212668",
		"name": "postman-collection",
		"description": "This is a template for postman collections in CS314.",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "config",
			"item": [
				{
					"name": "Config Post",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c53e4ea5-5ae6-445b-bc04-143b4383efb9",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"JSON test\", function () {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"requestType test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.requestType).to.eql (\"config\");\r",
									"});\r",
									"\r",
									"pm.test(\"serverName test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.serverName).to.be.a (\"string\");\r",
									"    pm.expect(jsonData.serverName).to.match(/[tT][0-9][0-9] .*/)\r",
									"})\r",
									"\r",
									"pm.test(\"features test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.features).to.not.equal(null);\r",
									"    pm.expect(jsonData.features).to.contain(\"config\");\r",
									"    pm.expect(jsonData.features).to.contain(\"distances\");\r",
									"});\r",
									"\r",
									"pm.test('Schema test', function () {\r",
									"    var Ajv = require(\"ajv\");\r",
									"    var ajv = new Ajv({logger:console});\r",
									"    var schema = {\r",
									"        \"properties\": {\r",
									"            \"serverName\": {\r",
									"                \"type\": \"string\",\r",
									"                \"minlength\":3\r",
									"            },\r",
									"            \"requestType\": {\r",
									"                \"type\" : \"string\"\r",
									"            },\r",
									"            \"features\": {\r",
									"                \"type\":\"array\"\r",
									"            }\r",
									"        }\r",
									"    };\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(ajv.validate(schema, jsonData)).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "ef049d9c-3a41-40a8-b18b-043708bc6d54",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"requestType\": \"config\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BASE_URL}}/api/config"
					},
					"response": []
				}
			],
			"id": "cb0164ca-b611-41a2-bcb8-3a12010200fd"
		},
		{
			"name": "Distances",
			"item": [
				{
					"name": "Distance: Null Place",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8afa0ea5-857d-4436-952b-9155a9f92fbf",
								"exec": [
									"pm.test(\"places test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.places).to.equal(null);\r",
									"    pm.expect(jsonData.places.length).to.equal(0);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "508aa64b-0159-44a6-a5ff-4da39ef46f30",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"requestType\": \"distances\",\r\n    \"earthRadius\": 6371.0,\r\n    \"places\": []\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BASE_URL}}/api/distances"
					},
					"response": []
				},
				{
					"name": "Distance: Two Place",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8afa0ea5-857d-4436-952b-9155a9f92fbf",
								"exec": [
									"pm.test(\"places test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.places).to.not.equal(null);\r",
									"    pm.expect(jsonData.places.length).to.equal(4572);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "ea0df1e0-4587-472e-919f-7c2419eee6ac",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"requestType\"    : \"distances\",\r\n  \"places\"         : [{\"name\":\"Hard Rock Cafe, Seattle\", \"latitude\":  \"47.609384\",  \"longitude\": \"-122.339507\"},\r\n                      {\"name\": \"Hard Rock Cafe, Las Vegas\", \"latitude\":  \"36.104382\", \"longitude\": \"-115.172316\"}],\r\n  \"earthRadius\"    : 6371.0,\r\n  \"distances\"       : [1408, 3171]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BASE_URL}}/api/distances"
					},
					"response": []
				},
				{
					"name": "Distance: Multi-Place",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8afa0ea5-857d-4436-952b-9155a9f92fbf",
								"exec": [
									"pm.test(\"places test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.places).to.not.equal(null);\r",
									"    pm.expect(jsonData.places.length).to.equal(6499);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "6c17f5cc-017d-4c32-8571-b1693a787800",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"requestType\"    : \"distances\",\r\n  \"places\"         : [{\"name\":\"Hard Rock Cafe, Seattle\", \"latitude\":  \"47.609384\",  \"longitude\": \"-122.339507\"},\r\n                      {\"name\": \"Hard Rock Cafe, Las Vegas\", \"latitude\":  \"36.104382\", \"longitude\": \"-115.172316\"},\r\n                      {\"name\": \"Hard Rock Cafe, Niagara Falls\", \"latitude\":  \"43.086921\", \"longitude\": \"-79.064569\"},\r\n                      {\"name\": \"Hard Rock Cafe, Miami\", \"latitude\":  \"25.776937\", \"longitude\": \"-80.184778\"}],\r\n  \"earthRadius\"    : 6371.0,\r\n  \"distances\"       : [1408, 3171, 1923, 4400]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BASE_URL}}/api/distances"
					},
					"response": []
				}
			],
			"id": "1ef61dd5-e179-4525-a5ef-21ba2767fe9c",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "173011b6-1693-4355-9d65-ed394ef6d39e",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "2f176dd6-7a0b-4923-b959-08121c51e2a0",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status test\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.withBody;",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"requestType test\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.requestType).to.eql (\"distances\");",
							"});",
							"",
							"pm.test(\"earthRadius test\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.earthRadius).to.eql(6371.0);",
							"});"
						]
					}
				}
			]
		},
		{
			"name": "Find",
			"item": [
				{
					"name": "Find: Null Return",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f3bee645-7553-4d7d-a34d-0e8db7eddcd0",
								"exec": [
									"pm.test(\"find test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.places).to.equal(null);\r",
									"})\r",
									"\r",
									"pm.test(\"limit test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.limit).to.eql(0);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "860d03be-bbec-47d4-ba58-274947e9ac66",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"requestType\": \"find\",\r\n    \"match\": [],\r\n    \"limit\": 0\r\n}"
						},
						"url": "{{BASE_URL}}/api/find"
					},
					"response": []
				},
				{
					"name": "Find: One Return",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8e261bf2-1488-4224-8373-949f7b5b6100",
								"exec": [
									"pm.test(\"find test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.places).to.not.equal(null);\r",
									"})\r",
									"\r",
									"pm.test(\"limit test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.limit).to.eql(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "c06a26ad-0968-4e91-9d95-2212643ece07",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"requestType\": \"find\",\r\n    \"match\": [],\r\n    \"limit\": 1\r\n}"
						},
						"url": "{{BASE_URL}}/api/find"
					},
					"response": []
				},
				{
					"name": "Find: Multi-Return",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "780128fd-fc54-4a96-bf8b-6cfe0ab174c4",
								"exec": [
									"pm.test(\"match test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.match).to.eql(\"dave\");\r",
									"});\r",
									"\r",
									"pm.test(\"limit test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.limit).to.eql(10);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "b48f230a-b34c-46cf-8728-c464e571fb1b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"requestType\": \"find\",\r\n    \"match\": [],\r\n    \"limit\": 10\r\n}"
						},
						"url": "{{BASE_URL}}/api/find"
					},
					"response": []
				}
			],
			"id": "a6771a46-c74e-4ddc-ab20-5a9adf29e855",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "5001d138-4bf5-4c00-a2b2-42c0052b5b49",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "f464552e-3a42-462a-add5-5cef401df0bb",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status test\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.withBody;",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"requestType test\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.requestType).to.eql (\"find\");",
							"});"
						]
					}
				}
			]
		},
		{
			"name": "Tour",
			"item": [
				{
					"name": "Tour: Null Place Optimization",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8509d0ae-014f-423b-b0b9-cecaf266f98f",
								"exec": [
									"pm.test(\"places test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.places).to.equal(null);\r",
									"    pm.expect(jsonData.places.length).to.equal(0);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "f82288ff-172f-47c7-a2d9-cbfd73468951",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"requestType\": \"tour\",\r\n    \"earthRadius\": 6371.0,\r\n    \"response\": 0,\r\n    \"places\" : []\r\n}"
						},
						"url": "{{BASE_URL}}/api/tour"
					},
					"response": []
				},
				{
					"name": "Tour: Two Place Optimization",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8509d0ae-014f-423b-b0b9-cecaf266f98f",
								"exec": [
									"pm.test(\"places test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.places).to.not.equal(null);\r",
									"    pm.expect(jsonData.places.length).to.equal(2566);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "767b005d-1391-48f8-80ae-4809ba3e83ef",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"requestType\": \"tour\",\r\n    \"earthRadius\": 6371.0,\r\n    \"response\": 1.0,\r\n    \"places\": [\r\n        {\r\n            \"name\": \"Canyon Ranch Lenox\",\r\n            \"latitude\": \"42.344754\",\r\n            \"longitude\": \"-73.278324\"\r\n        },\r\n        {\r\n            \"name\": \"Lake Austin Spa Resort\",\r\n            \"latitude\": \"30.327341\",\r\n            \"longitude\": \"-97.925930\"\r\n        }\r\n    ]\r\n}"
						},
						"url": "{{BASE_URL}}/api/tour"
					},
					"response": []
				},
				{
					"name": "Tour: Multi-Place Optimization",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8509d0ae-014f-423b-b0b9-cecaf266f98f",
								"exec": [
									"pm.test(\"places test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.places).to.not.equal(null);\r",
									"    pm.expect(jsonData.places.length).to.equal(11033);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "693c48a0-81ac-4ff6-970c-6cb1680b24aa",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"requestType\": \"tour\",\r\n    \"earthRadius\": 6371.0,\r\n    \"response\": 1.0,\r\n    \"places\": [\r\n        {\r\n            \"name\": \"Canyon Ranch Lenox\",\r\n            \"latitude\": \"42.344754\",\r\n            \"longitude\": \"-73.278324\"\r\n        },\r\n        {\r\n            \"name\": \"Lake Austin Spa Resort\",\r\n            \"latitude\": \"30.327341\",\r\n            \"longitude\": \"-97.925930\"\r\n        },\r\n        {\r\n            \"name\": \"Miraval Arizona Resort & Spa\",\r\n            \"latitude\": \"32.507908\",\r\n            \"longitude\": \"-110.884746\"\r\n        },\r\n        {\r\n            \"name\": \"The Lodge at Woodloch\",\r\n            \"latitude\": \"41.503652\",\r\n            \"longitude\": \"-75.100350\"\r\n        },\r\n        {\r\n            \"name\": \"Woodloch Pines Resort\",\r\n            \"latitude\": \"41.519637\",\r\n            \"longitude\": \"-75.088776\"\r\n        },\r\n        {\r\n            \"name\": \"The Ranch at Rock Creek\",\r\n            \"latitude\": \"46.256488\",\r\n            \"longitude\": \"-113.522112\"\r\n        },\r\n        {\r\n            \"name\": \"Vista Verde Guest Ranch\",\r\n            \"latitude\": \"40.764112\",\r\n            \"longitude\": \"-106.828677\"\r\n        }\r\n    ]\r\n}"
						},
						"url": "{{BASE_URL}}/api/tour"
					},
					"response": []
				}
			],
			"id": "5ee03296-d3de-433f-8621-78acebf546fa",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "47ae6746-2289-4c8e-8c06-d4ac0a0b0d34",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "76a6d04c-e56a-437a-ba2d-0062212cd50f",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status test\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.withBody;",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"requestType test\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.requestType).to.eql (\"tour\");",
							"});",
							"",
							"pm.test(\"earthRadius test\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.earthRadius).to.eql(6371.0);",
							"});",
							"",
							"pm.test(\"response test\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.response).to.eql(1.0);",
							"});"
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "67225739-b006-479c-a8f2-2cefb0d6b0b1",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "84fd2138-745b-4a1d-aaed-529ca0279b8e",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "7b38691e-cea5-42d0-a32a-6b4414a67d70",
			"key": "BASE_URL",
			"value": "HTTP://black-bottle.cs.colostate.edu:31415/"
		},
		{
			"id": "5bca5ac9-be3d-4501-a0c6-48bdfc74b4c6",
			"key": "TEAM_NAME",
			"value": "txx team name",
			"disabled": true
		}
	]
}